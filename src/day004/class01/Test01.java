package day004.class01;

import java.util.Random;
import java.util.Scanner;

public class Test01 {

	public static void main(String[] args) {
		
		/*[정수를 2개 입력합니다.
		정수1~정수2 사이의 랜덤수를 3개 출력해주세요.
		단, 랜덤숫자끼리는 중복되어서는 안됩니다!]*/
		
		
	/*	스캐너 변수 선언
		
		정수 1을 입력하라는 문구 출력
		변수 a에 정수 1을 입력받음
		정수 2를 입력하라는 문구 출력
		변수 b에 정수 2를 입력받음
		
		정수 1과 정수 2 사이의 범위 내에서라면
		정수 1과 정수 2 중 어떤 것이 더 크고 작은지 비교
		
		1.만약 정수 1(a)이 2(b)보다 크다면?
		임시 저장 변수에 정수 1을 저장하고
		정수 1에 정수 2를 대입
		임시 저장 변수에 있는 정수 1의 값을 정수 2에 대입
		-----------------------------------
		2. 시작점을 나타내는 변수명을 선언
		정수 1이 정수 2보다 크다면? 정수 1이 시작점, 아니면 정수 2가 시작점
		종점을 나타내는 변수명을 선언
		정수 1이 
		정수 2보다 크다면? 정수 1이 끝점, 아니면 정수 2가 끝점
		
		정수 1과 정수 2 사이에서 3개 이상의 다른 수가 나와야하니까
		b가 a보다 크면 b와 a가 2이상 차이가 나는지 비교하기
		정수 1과 정수 2의 차이가 2 미만일 경우에는 오류 문구 출력 후 프로그램 종료
		(b가 a보다 큰지 검사하고, b가 a랑 2 이상 차이나는지 검사함)
		
		만약 정수1과 정수 2가 같다면?!!!!
		프로그램 종료
		
		랜덤 변수 선언
		
		중복없이 값을 얻기 위한 반복문(while) 필요
		랜덤수 1을 선언하고 랜덤값 받기(정수 1 - 정수 2 사이 랜덤수)//(끝점 - 시작점 + 1) + 시작점
		랜덤수 2를 선언하고 랜덤값 받기(정수 1- 정수 2 사이 랜덤수)
		만약 랜덤수1과 랜덤수2의 값이 다르면 반복문 탈출
		랜덤수 3을 선언하고 랜덤값 받기 
		만약 랜덤수 1과 값이 다르고 랜덤수 2와도 값이 다르면 반복문 탈출
		
		입력된 범위 출력(a~b)
		랜덤수 1 출력
		랜덤수 2 출력
		랜덤수 3 출력
		
		
		// 정수 입력 받을 때 필요한 조건
		// 1. 정수1과 정수2는 2개 이상의 차이를 가져야 한다.
		// 2. 정수1과 정수2는 같으면 안된다.
		// 3. 더 작은 수부터 시작하여 큰 수까지가 범위가 되어야 한다. (크기 비교 필요)
		
		// 랜덤수 가져올 때 필요한 조건
		// 1. 3개의 랜덤수는 중복되면 안됨
		// 2. 언제 다른 3개의 랜덤수가 나올지 알 수 없음 -> while문 사용
		// 3. 범위는 정수1과 정수2 사이
		
		/*================================================================================================================================================*/

		//입력받기 위해 scanner 객체 선언
		Scanner sc = new Scanner(System.in);
		//문제가 뭔지 명시하는 내용
		System.out.println("문제 : 정수 2개를 입력하세요. 정수1~정수2 사이의 랜덤수를 3개를 출력해주세요. 단, 랜덤숫자끼리는 중복되어서는 안됩니다.");

		//입력받을 a와 b 초기화
		int a = 0, b = 0;

		//while(true)는 어디까지 반복할지 불분명해서 사용했고 무한루프를 실행시켰습니다.
		while (true) {
			// 첫 번째 입력 받기
			System.out.print("정수 1을 입력하세요 : ");
			a = sc.nextInt();

			// 두 번째 입력 받기
			System.out.print("정수 2를 입력하세요(정수 1과 값이 달라야 하며 최소 차이가 2 이상이어야 합니다.) : ");
			b = sc.nextInt();

			// a가 b보다 큰 경우 두 수 교환
			if (a > b) {
				int tmp = a;
				a = b;
				b = tmp;
			} // a를 작은수로 가정하고 b를 큰수로 이번 코드에서 가정을 할거기 때문에 이렇게 사용

			// 입력값 검증 및 정렬
			if (a == b) { //숫자가 같으면 랜덤한 숫자 3개가 나와야 하는데 안 나옴
				System.out.println("두 수가 같습니다. 다시 입력해주세요!");
				continue; //다시 입력하라고 돌려보냄
			} else if (b <= a + 1) { //범위가 작으면 랜덤한 숫자가 3개가 안 나옴
				System.out.println("범위가 너무 좁습니다! 두 수는 2 이상 차이가 나야 합니다!");
				continue;  //다시 입력하라고 돌려보냄
			}
			break; // while문 탈출
		}

		// random 객체 선언
		Random rand = new Random();
		final int RANDRANGE = b - a + 1; //반복되는 내용 상수화
		//b는 마지막 값, a는 첫번째 값으로 범위를 지정해주고 +1을 해줘서 원하는 범위를 지정한다.
		//rand.nextINt()는 인덱스가 0부터 시작해서 10을 입력하면 0~9를 출력하기에 1~10 출력을 위해 +1을 해준다.

		// 범위 내에서 나오는 랜덤된 정수들이 저장되는 변수
		int num1 = rand.nextInt(RANDRANGE) + a;
		int num2;
		int num3;

		//num1과 num2가 같으면 다시 반복해야 하는 어디까지 반복할 줄 모르는 불명확성 때문에 while문 사용
		while (true) { //무한루프
			num2 = rand.nextInt(RANDRANGE) + a; //+a를 하는 이유는 시작점이 어딘지 몰라서 시작점을 더해주는 내용
			if (num1 != num2) { //num1과 num2가 다르면 중복은 안 된다는 조건 성립
				break; //while문 탈출
			}
		}

		//num1과 num3, num2와 num3가 같으면 다시 반복해야 하기에 반복의 불명확성 때문에 while문 사용
		while (true) { //무한루프
			num3 = rand.nextInt(RANDRANGE) + a;
			/* num1과 num3은 같지 않고 num2와 num3은 같지 않아야 하기에 AND 연산 사용
			*  AND연산은 곱하기(*)를 의미하므로 T * F = 1 * 0 = 0 = False를 의미한다.
			*  반대로 OR연산은 더하기(+)를 의미하므로 T + F = 1 + 0 = 1 = True를 의미한다.
			*  그렇기에 우리는 중복이 없어야 하므로 둘 다 참일 때만 결과가 참이 나오는 AND연산을 사용했다.*/
			if (num1 != num3 && num2 != num3) {
				break;
			}
		}

		// 결과 출력
		System.out.println("입력된 범위 : " + a + " ~ " + b);
		System.out.println("랜덤수 1 : " + num1);
		System.out.println("랜덤수 2 : " + num2);
		System.out.println("랜덤수 3 : " + num3);

	}
}
